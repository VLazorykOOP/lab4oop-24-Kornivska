#include "vectoruint.h" // Включення заголовного файлу з описом класу VectorUInt
#include <iostream>

using namespace std;

int main() {
	VectorUInt A(5, 2); // Створення вектора A розміром 5 та ініціалізація всіх його елементів значенням 2
	VectorUInt B(3); // Створення вектора B розміром 3 зі значеннями за замовчуванням
	VectorUInt C; // Створення порожнього вектора C

	// Виведення векторів A, B та C на екран
	cout << "A: " << A << endl;
	cout << "B: " << B << endl;
	cout << "C: " << C << endl;

	// Виведення кількості створених об'єктів VectorUInt
	cout << "Об'єкти: " << A.count << endl;

	// Створення копії вектора A за допомогою конструктора копіювання
	VectorUInt D(A);

	// Виведення вектора D на екран
	cout << "D: " << D << endl;

	// Виведення кількості об'єктів VectorUInt після створення D
	cout << "Об'єкти: " << A.count << endl;
	// Інкрементування та декрементування вектора D за допомогою унарних операторів
	D++;
	cout << "D: " << D << endl;
	D--;
	cout << "D: " << D << endl;

	// Логічне заперечення порожнього вектора С
	cout << "!C: " << !C << endl;

	// Побітове доповнення елементів вектора A
	cout << "~A: " << ~A << endl;
	cout << "~A: " << ~A << endl;

	// Виведення вектора A на екран
	cout << "A: " << A << endl;

	// Виведення протилежного вектора A
	cout << "-A: " << -A << endl;
	cout << "-A: " << -A << endl;
	// Виконання арифметичних операцій між векторами та константами
	cout << "A+D: " << A + D << endl;
	cout << "A-D: " << A - D << endl;
	cout << "A+1: " << A + 1 << endl;
	cout << "A-1: " << A - 1 << endl;
	cout << "A*D: " << A * D << endl;
	cout << "A*2: " << A * 2 << endl;
	cout << "A/D: " << A / D << endl;
	cout << "A/2: " << A / 2 << endl;
	cout << "A%2: " << A % 2 << endl;
	cout << "A|D: " << (A | D) << endl;
	cout << "A|3: " << (A | 3) << endl;
	cout << "A^D: " << (A ^ D) << endl;
	cout << "A^3: " << (A ^ 3) << endl;

	// Виконання операцій присвоєння з об'єктами та константами
	A += D;
	cout << "A+=D: " << A << endl;
	A -= D;
	cout << "A-=D: " << A << endl;
	A += 3;
	cout << "A+=3: " << A << endl;
	A -= 3;
	cout << "A-=3: " << A << endl;
	A *= D;
	cout << "A*=D: " << A << endl;
	A /= D;
	cout << "A/=D: " << A << endl;
	A *= 3;
	cout << "A*=3: " << A << endl;
	A /= 3;
	cout << "A/=3: " << A << endl;

	// Створення вектора L, що є копією вектора A
	VectorUInt L(A);
	cout << "L: " << L << endl;

	// Виконання побітової операції модуля з числом 2
	L %= 2;
	cout << "L%=2: " << L << endl;

	// Виконання побітової операції додавання з числом 20
	L |= 20;
	cout << "L|=20: " << L << endl;

	// Виконання побітової операції виключаючого "або" з числом 10
	L ^= 10;
	cout << "L^10: " << L << endl;

	// Створення копії вектора A
	VectorUInt copyA(A);

	// Виведення кількості об'єктів VectorUInt
	cout << "Об'єкти: " << A.count << endl;

	// Порівняння векторів A та copyA на рівність та нерівність
	cout << "A==copyA: " << (A == copyA) << endl;
	cout << "A!=copyA: " << (A != copyA) << endl;

	// Виведення значення елементу вектора A за індексом 2
	cout << "A[2]: " << A[2] << endl;

	// Створення двох векторів Z та X
	VectorUInt Z(3, 4);
	VectorUInt X(3, 5);

	// Виведення векторів Z та X на екран
	cout << "Z: " << Z << endl;
	cout << "X: " << X << endl;

	// Порівняння векторів Z та X на більше, менше, більше або дорівнює та менше або дорівнює
	cout << "Z > X: " << (Z > X) << endl;
	cout << "Z < X: " << (Z < X) << endl;
	cout << "Z >= X: " << (Z >= X) << endl;
	cout << "Z <= X: " << (Z <= X) << endl;

	return 0;
}

	
